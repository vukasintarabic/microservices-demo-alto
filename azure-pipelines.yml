# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest


variables:
  ARM_CLIENT_ID: $(ARM_CLIENT_ID)          # Service Principal Client ID
  ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET) # Service Principal Client Secret
  ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
  ARM_TENANT_ID: $(ARM_TENANT_ID)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    echo "Installing Terraform..."
    wget https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
    unzip terraform_1.5.7_linux_amd64.zip
    sudo mv terraform /usr/local/bin/
    terraform --version
  displayName: 'Install Terraform'

- script: |
    echo "Initializing Terraform..."
    terraform init
  displayName: 'Terraform Init'

- script: |
    echo "Validating Terraform configuration..."
    terraform validate
  displayName: 'Terraform Validate'

- script: |
    echo "Planning Terraform changes..."
    terraform plan -out=tfplan
  displayName: 'Terraform Plan'

- script: |
    echo "Applying Terraform changes..."
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'